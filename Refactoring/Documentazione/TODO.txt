SEPARAZIONE MODELLO-VISTA:
MODEL gestisce i dati, VIEW li mostra.
view deve implementare un'interfaccia?
far diventare i metodi stampaDati (di Films ecc) metodi toString: ci penserà la view a richiamarli e stamparli. così non c'è view insieme ai dati
metodi di interazione con l'utente invece devono stare in Controller? tipo cercaFilm, rimuoviFilm, ...
nella view creo e mostro i MENU? non contengono dati, mostrano solo scritte

RisorseView?


cosa da rifattorizzare potrebbe essere ricostruisci prestiti: salvando nello stesso file? 

es. in MenuScegliGenereLibro c'è un IF con i generi all'interno: bisognerebbe usare qualche pattern!

sistemare metodi con catena di chiamate troppo lunga (metodo.metodo.metodo ...): è un pattern

CATEGORIE[] nelle varie classi non va troppo bene


trovare come fare a creare un oggetto leggendo proprietà di sistema: serve per le view, in particolare per il Dependency Inversion Principle (SoliD).
le view implementano tutte un'interfaccia però da qualche parte bisogna dire Interfaccia v = new View() (da qualche parte deve venire istanziata la classe), 
e view in questo caso è la view istanziata e non l'interfaccia, quindi la classe in cui si trova questa instanziazione dipenderà sia dall'interfaccia che dalla classe vera e non va bene (cioè non funziona il principio). se leggo proprietà di sistema
(forse) aggiro questa cosa. (vedere l'UML "new")